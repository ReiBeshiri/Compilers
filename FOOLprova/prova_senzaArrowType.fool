/* FUNZIONA 400: il codice con variabili funzionali esegue correttamente */
/* let
	fun linsum2:int(x:int)
        x * 2;
        
    var z:(int)->int = linsum2;
	
    fun linsum:int(x:int)
        z(x) + 100;
        
    var y:(int)->int = linsum;
in
    print(y(150)); */

/* FUNZIONA: restituisce l'entry point della funzione add() */
/* let
    fun add:int(c2:int, x2:int)
        c2 + x2;
        
    var z2:(int, int)->int = add;
    
in
    print(z2); */

/* FUNZIONA 400: le variabili innestate funzionano correttamente */
/* let
    fun add:int(c2:int, x2:int)
        c2 + x2;
        
    fun y:int(c:int)
    	let
    		fun add2:int(x:int)
        		add(c, x);
        in
        	add2(170);
in
    print(y(230)); */

/* FUNZIONA 400: utilizzo variabile globale di tipo funzionale*/
/* let
	fun linsum:int(a:int,b:int)
    	a + b; 
    	
   	var y:(int, int)->int = linsum;
	
  	fun g:int(x:int, z:int)
    	y(x, z);
  
in
  	print(g(130,270)); */
  	
/* FUNZIONA 400: utilizzo un parametro di tipo funzionale */
/* let
	fun linsum:int(a:int,b:int)
    	a + b;
    	
  	fun g:int(x:(int,int)->int)
  		x(130, 270);
  
in
  print(g(linsum)); */
  
/* FUNZIONA 400: come argomento di una funzione gli passo una variabile di tipo funzionale */
/* let
	fun linsum:int(a:int,b:int)
    	a + b;
    	
    var y:(int, int)->int = linsum;
    
	
  	fun g:int(x:(int,int)->int)
    	x(130,270);
  
in
  print(g(y)); */
 
/* FUNZIONA 500: passo due argomenti di tipo funzionale ad una funzione */ 
/* let
    fun linsum:int(a:int,b:int)
    	a + b;
    	
    fun linsum2:int(a:int,b:int)
    	a * b;
    
	fun g:int(x:(int,int)->int, c:(int,int)->int)
    	x(130,270) + c(10,10);
in
  print(g(linsum, linsum2)); */

/* FUNZIONA 1000: passo due argomenti di tipo funzionale a due funzioni */ 
/* let
    fun linsum:int(a:int,b:int)
    	a + b;
    
    fun linsum2:int(a:int,b:int)
    	a * b;
    	
	fun g:int(x:(int,int)->int, c:(int,int)->int)
    	x(130,270) + c(10,10);
    	
    fun g2:int(x2:(int,int)->int, c2:(int,int)->int)
    	x2(10,10) + c2(130,270);
    	
in
  print(g(linsum, linsum2) + g2(linsum2, linsum)); */

/* FUNZIONA 3700: utilizzo di funzioni e variabili funzionali */
/* let
    fun linsum:int(a:int,b:int)
    	a + b;
    
	fun g:int(x:(int,int)->int, v:int)
		let
			fun linsum3:int(a2:int,b2:int)
    			a2 + b2 + v;
		in 
    		x(130,270) + linsum3(150,150);
    	
in
  print(g(linsum, 3000)); */

/* FUNZIONA 3700: utilizzo di variabili funzionali innestate */
/* let
    fun linsum:int(a:int,b:int)
    	a + b;
   	
   	fun linsum2:int(x:(int,int)->int)
    	x(150,150);
    
	fun g:int(x:(int,int)->int, v:int)
		let
			fun linsum3:int(a2:int,b2:int)
    			a2 + b2 + v;
		in 
    		x(130,270) + linsum2(linsum3);
    	
in
  print(g(linsum, 3000)); */

/* FUNZIONA 2000 */  
/*let
  fun g:int(x:(int,int)->int)
    x(500,700);
    
  fun f:int(c:int)
    let
      fun linsum:int(a:int,b:int)
        (a+b) + c;      
    in 
      g(linsum);
in
  print(f(800)); */

/* FUNZIONA 2000 */
let
  var t:int = 800;
    
  fun f:int(c:int)
    let
      fun linsum:int(a:int,b:int)
        (a+b) + c;      
    in 
      linsum(500, 700);   
in
  print(f(t));